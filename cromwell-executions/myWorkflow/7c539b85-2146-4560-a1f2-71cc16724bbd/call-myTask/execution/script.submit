#!/bin/bash
# make sure there is no preexisting Docker CID file
rm -f /home/ngenebio/gatk-workflows/cromwell-executions/myWorkflow/7c539b85-2146-4560-a1f2-71cc16724bbd/call-myTask/execution/docker_cid
# run as in the original configuration without --rm flag (will remove later)
docker run \
  --cidfile /home/ngenebio/gatk-workflows/cromwell-executions/myWorkflow/7c539b85-2146-4560-a1f2-71cc16724bbd/call-myTask/execution/docker_cid \
  -i \
   \
  --entrypoint /bin/bash \
  -v /home/ngenebio/gatk-workflows/cromwell-executions/myWorkflow/7c539b85-2146-4560-a1f2-71cc16724bbd/call-myTask:/cromwell-executions/myWorkflow/7c539b85-2146-4560-a1f2-71cc16724bbd/call-myTask \
  ubuntu@sha256:de774a3145f7ca4f0bd144c7d4ffb2931e06634f11529653b23eba85aef8e378 /cromwell-executions/myWorkflow/7c539b85-2146-4560-a1f2-71cc16724bbd/call-myTask/execution/script

# get the return code (working even if the container was detached)
rc=$(docker wait `cat /home/ngenebio/gatk-workflows/cromwell-executions/myWorkflow/7c539b85-2146-4560-a1f2-71cc16724bbd/call-myTask/execution/docker_cid`)

# remove the container after waiting
docker rm `cat /home/ngenebio/gatk-workflows/cromwell-executions/myWorkflow/7c539b85-2146-4560-a1f2-71cc16724bbd/call-myTask/execution/docker_cid`

# return exit code
exit $rc
