2018-10-12 13:57:05,359 INFO  - 992a71df-4d70-4ac4-ad71-bbb417c9127a-SubWorkflowActor-SubWorkflow-PreProcessTumor:-1:1 [UUID(992a71df)]: Starting PreProcessingForVariantDiscovery_GATK4.GetBwaVersion, PreProcessingForVariantDiscovery_GATK4.CreateSequenceGroupingTSV
2018-10-12 13:57:08,149 INFO  - PipelinesApiAsyncBackendJobExecutionActor [UUID(992a71df)PreProcessingForVariantDiscovery_GATK4.GetBwaVersion:NA:1]: `# Not setting "set -o pipefail" here because /bwa has a rc=1 and we don't want to allow rc=1 to succeed 
# because the sed may also fail with that error and that is something we actually want to fail on.
/usr/gitcbwa 2>&1 | \
grep -e '^Version' | \
sed 's/Version: //'`
2018-10-12 13:57:08,217 INFO  - PipelinesApiAsyncBackendJobExecutionActor [UUID(992a71df)PreProcessingForVariantDiscovery_GATK4.CreateSequenceGroupingTSV:NA:1]: `python <<CODE
with open("/cromwell_root/gatk-legacy-bundles/b37/human_g1k_v37_decoy.dict", "r") as ref_dict_file:
    sequence_tuple_list = []
    longest_sequence = 0
    for line in ref_dict_file:
        if line.startswith("@SQ"):
            line_split = line.split("\t")
            # (Sequence_Name, Sequence_Length)
            sequence_tuple_list.append((line_split[1].split("SN:")[1], int(line_split[2].split("LN:")[1])))
    longest_sequence = sorted(sequence_tuple_list, key=lambda x: x[1], reverse=True)[0][1]
# We are adding this to the intervals because hg38 has contigs named with embedded colons (:) and a bug in 
# some versions of GATK strips off the last element after a colon, so we add this as a sacrificial element.
hg38_protection_tag = ":1+"
# initialize the tsv string with the first sequence
tsv_string = sequence_tuple_list[0][0] + hg38_protection_tag
temp_size = sequence_tuple_list[0][1]
for sequence_tuple in sequence_tuple_list[1:]:
    if temp_size + sequence_tuple[1] <= longest_sequence:
        temp_size += sequence_tuple[1]
        tsv_string += "\t" + sequence_tuple[0] + hg38_protection_tag
    else:
        tsv_string += "\n" + sequence_tuple[0] + hg38_protection_tag
        temp_size = sequence_tuple[1]
# add the unmapped sequences as a separate line to ensure that they are recalibrated as well
with open("sequence_grouping.txt","w") as tsv_file:
  tsv_file.write(tsv_string)
  tsv_file.close()

tsv_string += '\n' + "unmapped"

with open("sequence_grouping_with_unmapped.txt","w") as tsv_file_with_unmapped:
  tsv_file_with_unmapped.write(tsv_string)
  tsv_file_with_unmapped.close()
CODE`
2018-10-12 13:57:09,499 INFO  - 992a71df-4d70-4ac4-ad71-bbb417c9127a-SubWorkflowActor-SubWorkflow-PreProcessTumor:-1:1 [UUID(992a71df)]: Starting PreProcessingForVariantDiscovery_GATK4.SamToFastqAndBwaMem
2018-10-12 13:57:10,179 INFO  - PipelinesApiAsyncBackendJobExecutionActor [UUID(992a71df)PreProcessingForVariantDiscovery_GATK4.SamToFastqAndBwaMem:0:1]: `  set -o pipefail
  set -e

  # set the bash variable needed for the command-line
  bash_ref_fasta=/cromwell_root/gatk-legacy-bundles/b37/human_g1k_v37_decoy.fasta

java -Dsamjdk.compression_level=5 -Xms3000m -jar /usr/gitcpicard.jar \
    SamToFastq \
	INPUT=/cromwell_root/ngb_cloud/cromwell-execution/FullPipeline/36fe9ba4-c061-4ba3-bac7-fa02c88ce3c9/call-PreProcessFastqs/PreProcessFastq.ConvertPairedFastQsToUnmappedBamWf/ed64d045-eec8-4cbb-9e41-5260a4342b6c/call-PairedFastQsToUnmappedBAM/shard-0/NGB0-075-KOD-NEB-18-2.unmapped.bam \
	FASTQ=/dev/stdout \
	INTERLEAVE=true \
	NON_PF=true \
  | \
/usr/gitcbwa mem -K 100000000 -p -v 3 -t 16 -Y $bash_ref_fasta /dev/stdin -  2> >(tee NGB0-075-KOD-NEB-18-2.unmapped.unmerged.bwa.stderr.log >&2) \
  | \
samtools view -1 - > NGB0-075-KOD-NEB-18-2.unmapped.unmerged.bam`
2018-10-12 13:57:37,123 INFO  - PipelinesApiAsyncBackendJobExecutionActor [UUID(992a71df)PreProcessingForVariantDiscovery_GATK4.GetBwaVersion:NA:1]: job id: operations/EIqYjLXmLBiH8-iH96qzvhQgyJGInf8LKg9wcm9kdWN0aW9uUXVldWU
2018-10-12 13:57:37,123 INFO  - PipelinesApiAsyncBackendJobExecutionActor [UUID(992a71df)PreProcessingForVariantDiscovery_GATK4.CreateSequenceGroupingTSV:NA:1]: job id: operations/EIeYjLXmLBjoyZX7h7Tim6kBIMiRiJ3_CyoPcHJvZHVjdGlvblF1ZXVl
2018-10-12 13:57:37,126 INFO  - PipelinesApiAsyncBackendJobExecutionActor [UUID(992a71df)PreProcessingForVariantDiscovery_GATK4.SamToFastqAndBwaMem:0:1]: job id: operations/EK2YjLXmLBjRpqyvuNH72v8BIMiRiJ3_CyoPcHJvZHVjdGlvblF1ZXVl
2018-10-12 13:58:05,359 INFO  - PipelinesApiAsyncBackendJobExecutionActor [UUID(992a71df)PreProcessingForVariantDiscovery_GATK4.GetBwaVersion:NA:1]: Status change from - to Running
2018-10-12 13:58:05,368 INFO  - PipelinesApiAsyncBackendJobExecutionActor [UUID(992a71df)PreProcessingForVariantDiscovery_GATK4.SamToFastqAndBwaMem:0:1]: Status change from - to Running
2018-10-12 13:58:05,377 INFO  - PipelinesApiAsyncBackendJobExecutionActor [UUID(992a71df)PreProcessingForVariantDiscovery_GATK4.CreateSequenceGroupingTSV:NA:1]: Status change from - to Running
2018-10-12 13:59:46,743 INFO  - PipelinesApiAsyncBackendJobExecutionActor [UUID(992a71df)PreProcessingForVariantDiscovery_GATK4.CreateSequenceGroupingTSV:NA:1]: Status change from Running to Success
2018-10-12 14:01:27,895 INFO  - PipelinesApiAsyncBackendJobExecutionActor [UUID(992a71df)PreProcessingForVariantDiscovery_GATK4.GetBwaVersion:NA:1]: Status change from Running to Success
2018-10-12 14:02:01,973 INFO  - PipelinesApiAsyncBackendJobExecutionActor [UUID(992a71df)PreProcessingForVariantDiscovery_GATK4.SamToFastqAndBwaMem:0:1]: Status change from Running to Success
